{"mappings":"iiBAAA,I,EAAAA,EAAAC,EAAA,SCcA,SAASC,EAASC,EAAMC,EAAMC,GAC5B,IAAIC,EAASC,EAAMC,EAASC,EAAWC,EAGvC,SAASC,IACP,IAAIC,EAAOC,KAAKC,MAAQL,EAEpBG,EAAOR,GAAQQ,GAAQ,EACzBN,EAAUS,WAAWJ,EAAOP,EAAOQ,IAEnCN,EAAU,KACLD,IACHK,EAASP,EAAKa,MAAMR,EAASD,GAC7BC,EAAUD,EAAO,M,CAXnB,MAAQH,IAAMA,EAAO,KAgBzB,IAAIa,EAAY,WACdT,EAAUU,KACVX,EAAOY,UACPV,EAAYI,KAAKC,MACjB,IAAIM,EAAUf,IAAcC,EAO5B,OANKA,IAASA,EAAUS,WAAWJ,EAAOP,IACtCgB,IACFV,EAASP,EAAKa,MAAMR,EAASD,GAC7BC,EAAUD,EAAO,MAGZG,C,EAoBT,OAjBAO,EAAUI,MAAQ,WACZf,IACFgB,aAAahB,GACbA,EAAU,K,EAIdW,EAAUM,MAAQ,WACZjB,IACFI,EAASP,EAAKa,MAAMR,EAASD,GAC7BC,EAAUD,EAAO,KAEjBe,aAAahB,GACbA,EAAU,K,EAIPW,C,CAITf,EAASsB,SAAWtB,EAEpBuB,EAAiBvB,EDlEjB,IAAMwB,EAAO,CACXC,KAAMC,SAASC,cAAc,UAG3BC,EAAW,GACXC,EAAQ,EACRC,EAAW,EAGfN,EAAKC,KAAKM,iBAAiB,SAAS,EAAAR,EAAAD,WAwBpC,SAAiBU,GACfJ,EAASI,EAAMC,OAAOC,MAAQF,EAAMC,OAAOE,K,GAzBS,MACtDX,EAAKC,KAAKM,iBAAiB,UA2B3B,SAAsBC,GACpBA,EAAMI,iBACNJ,EAAMC,OAAOI,QACT,IAAIC,EAAaV,EAASW,MACtBC,EAAOZ,EAASY,KAChBC,EAASb,EAASa,OACxB5B,YAAW,WACT,IAAM6B,EAAaC,aAAY,WArBrC,IAVQC,EAgCAf,EAAQW,EAAOV,EAAWe,OAAOP,IACjCR,GAAY,IACIW,GACdK,cAAcJ,IAnChBE,EAAgBG,KAAKC,SAAW,GAC/B,IAAIC,SAAQ,SAACC,EAASC,GACpBP,EACLM,EAAQ,WAERC,EAAO,Q,KAORC,MAAK,WACLC,EAAAvD,GAASwD,OAAOC,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAAN3B,EAAM,M,IAEtE4B,OAAM,WACPJ,EAAAvD,GAASwD,OAAOI,QAAQ,sBAAqCF,OAAf1B,EAAS,QAAY0B,OAAN3B,EAAM,M,MAwB9DW,E,GAEFF,GAELV,EAAW,E","sources":["src/js/03-promises.js","node_modules/debounce/index.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { debounce } from \"debounce\";\n\nconst refs = {\n  form: document.querySelector('.form'),\n  \n}\nlet formData = {};\nlet delay = 0;\nlet position = 0;\n\n\nrefs.form.addEventListener('input', debounce(onInput, 500));\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction createPromise() {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n       if (shouldResolve) {\n      resolve('success')\n    } else {\n      reject('error')\n    }\n  });\n}\n\nfunction launchNotifications() {\n    createPromise({ position, delay })\n    .then(() => {\n     Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(() => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    }   \n\nfunction onInput(event) {\n  formData[event.target.name] = event.target.value;\n};\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  event.target.reset();\n      let startDelay = formData.delay;\n      let step = formData.step;\n      let amount = formData.amount;\n    setTimeout(() => {\n      const intervalId = setInterval(() => {\n        delay = step * position + Number(startDelay);\n        position += 1;\n        if (position >= amount) {\n          clearInterval(intervalId);\n          \n        }\n        launchNotifications();\n        \n      }, step);\n       \n    }, startDelay);\n  \n  formData = {};\n}","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n"],"names":["$iU1Pc","parcelRequire","$004cd6322d5b1502$var$debounce","func","wait","immediate","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","apply","debounced","this","arguments","callNow","clear","clearTimeout","flush","debounce","$004cd6322d5b1502$exports","$ce04d3a99e08e73b$var$refs","form","document","querySelector","$ce04d3a99e08e73b$var$formData","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$position","addEventListener","event","target","name","value","preventDefault","reset","startDelay","delay","step","amount","intervalId","setInterval","shouldResolve","Number","clearInterval","Math","random","Promise","resolve","reject","then","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.f80ce789.js.map"}